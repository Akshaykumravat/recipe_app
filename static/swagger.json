{
  "openapi": "3.0.3",
  "info": {
    "title": "Golden Recipe APIs",
    "version": "1.0.0",
    "description": "API for managing users, authentication, and favorites in the Golden Recipe application."
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    },
    {
      "url": "https://api.goldenrecipe.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations related to user registration, authentication, and profile"
    },
    {
      "name": "Recipe",
      "description": "Operations related to managing recipes and favorites"
    }
  ],

  "paths": {
    "/users/singup": {
      "post": {
        "tags": ["User"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["first_name", "last_name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created successfully" },
          "400": { "description": "Validation or email error" }
        }
      }
    },
    "/users/verify-email": {
      "post": {
        "tags": ["User"],
        "summary": "Verify email with code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "verification_code": { "type": "string" }
                },
                "required": ["email", "verification_code"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Email verified" }
        }
      }
    },
    "/users/resend-verification-code": {
      "post": {
        "tags": ["User"],
        "summary": "Resend email verification code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Code resent" }
        }
      }
    },
    "/users/signin": {
      "post": {
        "tags": ["User"],
        "summary": "Log in user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" }
        }
      }
    },
    "/users/update-user": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user profile",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" },
                  "profile_image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User updated" }
        }
      }
    },
    "/users/get-user": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user profile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User retrieved" }
        }
      }
    },
    "/users/delete-user": {
      "patch": {
        "tags": ["User"],
        "summary": "Soft delete user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": { "description": "User deleted" }
        }
      }
    },
    "/users/get-all-user": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users (paginated)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer" },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": { "type": "integer" },
            "description": "Results per page"
          }
        ],
        "responses": {
          "200": { "description": "Users list" }
        }
      }
    },
    "/users/update-password": {
      "post": {
        "tags": ["User"],
        "summary": "Change user password",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": { "type": "string" },
                  "new_password": { "type": "string" }
                },
                "required": ["old_password", "new_password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password updated" }
        }
      }
    },
    "/users/add-to-favorite": {
      "post": {
        "tags": ["User"],
        "summary": "Add recipe to favorites",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipe_id": { "type": "integer" }
                },
                "required": ["recipe_id"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Recipe added to favorites" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
